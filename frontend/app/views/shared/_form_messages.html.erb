<%= render :partial => "shared/flash_messages" %>

<div class="form-messages" id="form_messages">
<% if @exceptions %>
   <script>
     $(function () {

       var setupErrorMessage = function(idx, elt, type) {
         var $matched;

         if ($("#" + elt).length) {
           $matched = $("#" + elt);
           $matched.parents(".control-group:first").addClass(type);
         } else if ($("[data-real-id=" + elt + "]").length) {
           $("[data-real-id=" + elt + "]").each(function() {
             $(this).parents(".control-group:first").addClass(type);
           });
         } else if ($("#" + elt + "_0_").length) {
           // I know.  Icky.
           //
           // Sometimes validation will report that an entire property
           // is missing (like resource[notes][0][content]).  If that
           // property is an array, from the form's point of view this
           // error means that the user didn't provide the first
           // element of the array (index 0).
           //
           // So, if we didn't get a match on the path specified by
           // the error, assume it's an array and look for the path of
           // the first element.
           $matched = $("#" + elt + "_0_");
           $matched.parents(".control-group:first").addClass(type);
         }
         if ($matched && !$("." + type + "[data-target=" + elt + "]").hasClass("linked-to-field")) {
           $("." + type + "[data-target=" + elt + "]").addClass("linked-to-field").append("<span class='icon-chevron-down'></span>").click(function() {

             var $scrollTo = $matched;

             // CodeMirror text areas are hidden so we can't scroll to
             // them.  Scroll nearby :)
             if (!$matched.is(":visible")) {
               $scrollTo = $matched.parent();
             }

             $scrollTo.ScrollTo({
              callback: function() {
                $matched.focus();
              }
             });
           });
         }
       };

       var _errors = <%= form.exceptions_for_js(@exceptions) %>;

       var callback = function () {
         if (_errors.errors) {
           $(_errors.errors).each(function (idx, elt) {
             setupErrorMessage(idx, elt, "error");
           });
         }

         if (_errors.warnings) {
           $(_errors.warnings).each(function (idx, elt) {
             setupErrorMessage(idx, elt, "warning");
           });
         }

         // unbind the event (only needs to run once)
         $(document).unbind("ajaxComplete", callback);

         // tell the world all the errors have been rendered
         $(document).triggerHandler("formErrorsReady");
       };

       $(callback);
       $(document).ajaxComplete(callback);
     });
   </script>

  <%
    errors = {}
    errors.merge!(@exceptions_raw.errors) if @exceptions_raw && @exceptions_raw.errors.length > 0
    errors.merge!(@exceptions[:errors]) if @exceptions.has_key?(:errors)
  %>

   <% if errors.length > 0 %>
      <div class="alert alert-error">
         <% errors.each do |attr, messages| %>
            <div class="errors-for-attribute">
              <% messages.each do |msg| %>
                <div class="error"
                     data-target="<%= form.id_for_javascript(attr) %>">
                  <% if attr === 'coded_errors' %>
                    <%# Special errors that we pull from the YML instead of inserting verbatim %>
                    <%= I18n.t(form.path(msg)) %>
                  <% else %>
                    <%= I18n.t(form.path_to_i18n_key(attr)) %> - <%= msg %>
                  <% end %>
                </div>
              <% end %>
            </div>
         <% end %>
      </div>
   <% end %>
   <% if @exceptions.has_key?(:warnings) %>
      <div class="alert alert-warning">
         <% @exceptions[:warnings].each do |attr, messages| %>
            <div class="warnings-for-attribute">
              <% messages.each do |msg| %>
                <div class="warning" data-target="<%= form.id_for_javascript(attr) %>"><%= I18n.t(form.path_to_i18n_key(attr)) %> - <%= msg %></div>
              <% end %>
            </div>
         <% end %>
         <% if not @exceptions.has_key?(:errors) %>
            <br/>
            <input type="submit" name="ignorewarnings" class="btn btn-warning" value="<%= I18n.t("actions.save_anyway") %>" />
         <% end %>
      </div>
   <% end %>
<% end %>

</div>
