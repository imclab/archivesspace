# Maps the cross walk between EAD and ASpace objects.
# Borrows some ideas from Qubit
#   http://code.google.com/p/qubit-toolkit/source/browse/trunk/apps/qubit/modules/object/config/import/ead.yml
source:
  format: "xml"
  schema: "http://www.loc.gov/ead/ead.xsd"
  
# Shortcut mappings based soley on the node name. If the parser
# encounters a node with a name matching the key, it will
# open a new entity and proceed.
mappings:
  ead: resource
  bibliography: note_bibliography
  index: note_index
  accessrestrict: note_multipart
  accruals: note_multipart
  acqinfo: note_multipart
  altformavail: note_multipart
  appraisal: note_multipart
  arrangement: note_multipart
  bioghist: note_multipart
  custodhist: note_multipart
  fileplan: note_multipart
  odd: note_multipart
  otherfindaid: note_multipart
  originalsloc: note_multipart
  phystech: note_multipart
  prefercite: note_multipart
  processinfo: note_multipart
  relatedmaterial: note_multipart
  scopecontent: note_multipart
  separatedmaterial: note_multipart
  userestrict: note_multipart
  c: archival_object
  c01: archival_object
  c02: archival_object
  c03: archival_object
  c04: archival_object
  c05: archival_object
  c06: archival_object
  c07: archival_object
  c08: archival_object
  c09: archival_object
  c10: archival_object
  c11: archival_object
  c12: archival_object
  container: container
  subject: subject
  persname: agent_person
  corpname: agent_corporate_entity  
    
  
entities:
  resource: 
    # xpath: ["//ead"]
    properties:
      id_0: 
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.sub(/[\\/_\\.\\s].*/, '')"
      
      id_1:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[1]"
      
      id_2:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[2]"
        
      id_3:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[3]"

      language:
        default: "eng"
        
      level:
        default: "collection"

      title: 
        xpath: ["child::*/child::*/child::unittitle/text()"]
        
      subjects: 
        axis: "descendant"
        
      extents:
        xpath: ["child::*/child::*/child::*/child::extent"]
        default: "5 or so"
        procedure: "|value| {'portion' => 'whole', 'number' => value, 'extent_type' => 'reels'}"
      
      dates:
        xpath: ["child::*/child::*/child::unitdate"]
        procedure: "|value| {'expression' => value, 'label' => 'other'}"
        
      linked_agents:
        xpath: ["descendant::persname", "descendant::corpname"]
        procedure: "|val| {'role' => 'subject', 'ref' => val.uri}" #val is a json object (agent)
        
      notes:
        axis: "descendant"
 
  note_bibliography:
    # xpath: ["//bibliography"]
    properties:
      label:
        default: "just a default note label"
        
      content:
        xpath: ["self"]
  
  note_index:
    # xpath: ["//index"]
    properties:
      label:
        default: "just a default note label"
      
      content:
        xpath: ["self"]

  note_multipart:
    # xpath: [ "//accessrestrict", "//accruals", "//acqinfo", "//altformavail", "//appraisal", "//arrangement", "//bioghist", "//custodhist", "//fileplan", "//odd", "//otherfindaid", "//originalsloc", "//phystech", "//prefercite", "//processinfo", "//relatedmaterial", "//scopecontent", "//separatedmaterial", "//userestrict"]
    properties: 
      label:
        default: "just a default note label"
      
      content:
        xpath: ["self"]
        
      type:
        xpath: ["self::name"]

  archival_object:
    # name: ["c", "c01", "c02", "c03", "c04", "c05", "c06", "c07", "c08", "c09", "c10", "c11", "c12"]
    # xpath: ["//c", "//c01", "//c02", "//c03", "//c04", "//c05", "//c06", "//c07", "//c08", "//c09", "//c10", "//c11", "//c12"]
    properties:
      dates:
        xpath: ["*/unitdate"]
        procedure: "|value| {'expression' => value, 'label' => 'other'}"

      component_id:
        xpath: ["*/unitid"]
        procedure: "|val| val.gsub!(/[\\/_\\-.]/, '_')"
        
      extents:
        xpath: ["child::*/child::*/child::extent"]
        default: "5 or so"
        procedure: "|value| {'portion' => 'whole', 'number' => value, 'extent_type' => 'reels'}"
        
      instances:
        xpath: ["child::*/child::container"]
        # axis: descendant
        procedure: "|val| {'instance_type' => 'text', 'container' => val.to_hash}"
        # procedure: "|val| if val.match(/container.*?type=\"([a-zA-Z]*)\"/);  c = {}; val.scan(/container.*?type=\"([a-zA-Z]*)\"/).each_with_index {|t, i| c.merge!({\"type_#{i+1}\" => t[0], \"indicator_#{i+1}\" => '1', \"barcode_#{i+1}\" => '10001'})}; {'instance_type' => 'text', 'container' => c}; end"
        # if val.match(/container.*?type=([a-zA-Z]*)/); {'instance_type' => 'text', 'container' => {'type_1' => val.match(/container.*?type=([a-zA-Z]*)/)[0], 'indicator_1' => '1', 'barcode_1' => '10001'}}; end"

      language:
        default: "eng"

      level:
        xpath: ["@level"]
        default: "item"
        
      linked_agents:
        xpath: ["child::*/child::*/child::persname", "child::*/child::*/child::corpname"]
        procedure: "|val| {'role' => 'subject', 'ref' => val.uri}" #val is a json object (agent)
      
      notes:
        axis: "descendant"
        
      parent: 
        axis: "parent"

      ref_id: 
        xpath: ["@id"]

      resource: 
        axis: "ancestor"
        
      subjects: 
        axis: "descendant"
        
      title: 
        xpath: ["child::*/child::unittitle"]
        default: "Archival Object"
        
  container:
    # xpath: ["//container"]
    properties:
      type_1: 
        xpath: ["@type"]

      indicator_1:
        xpath: ["@id"]
        default: "default_indicator"
        
      barcode_1: 
        default: "10101010"
    
  subject:
    # xpath: ["//subject"]
    properties:
      terms: 
        xpath: ["self"]
        procedure: "|value| {'term' => value, 'term_type' => 'Cultural context', 'vocabulary' => '/vocabularies/1'}"
      vocabulary:
        default: "/vocabularies/1"
        
  agent_person:
    # xpath: ["//persname"]
    properties:
      agent_type:
        default: "agent_person"
      
      names:
        xpath: ["self"]
        procedure: "|value| {'rules' => 'local', 'primary_name' => value, 'sort_name' => value, 'name_order' => 'direct'}"

  agent_corporate_entity:
    # xpath: ["//corpname"]
    properties:
      agent_type:
        default: "agent_corporate_entity"    
  
      names:
        xpath: ["self"]
        procedure: "|value| {'rules' => 'local', 'primary_name' => value, 'sort_name' => value}"
  
      



